{
    "codeNarc": {
        "url": "https://www.codenarc.org",
        "version": "1.5"
    },
    "report": {
        "timestamp": "Jan 1, 2010 4:51:12 PM"
    },
    "project": {
        "title": "My Cool Project",
        "sourceDirectories": [
            "c:/MyProject/src/main/groovy",
            "c:/MyProject/src/test/groovy"
        ]
    },
    "summary": {
        "totalFiles": 6,
        "filesWithViolations": 3,
        "priority1": 2,
        "priority2": 2,
        "priority3": 3
    },
    "packages": [
        {
            "path": "src/main",
            "totalFiles": 3,
            "filesWithViolations": 3,
            "priority1": 2,
            "priority2": 2,
            "priority3": 3,
            "files": [
                {
                    "name": "MyAction.groovy",
                    "violations": [
                        {
                            "ruleName": "RULE1",
                            "priority": 1,
                            "lineNumber": 111,
                            "sourceLine": "if (count < 23 && index <= 99 && name.contains('\u0000')) {"
                        },
                        {
                            "ruleName": "RULE3",
                            "priority": 3,
                            "lineNumber": 333,
                            "sourceLine": "throw new Exception(\"cdata=<![CDATA[whatever]]>\") // Some very long message 1234567890123456789012345678901234567890",
                            "message": "Other info"
                        },
                        {
                            "ruleName": "RULE3",
                            "priority": 3,
                            "lineNumber": 333,
                            "sourceLine": "throw new Exception(\"cdata=<![CDATA[whatever]]>\") // Some very long message 1234567890123456789012345678901234567890",
                            "message": "Other info"
                        },
                        {
                            "ruleName": "RULE1",
                            "priority": 1,
                            "lineNumber": 111,
                            "sourceLine": "if (count < 23 && index <= 99 && name.contains('\u0000')) {"
                        },
                        {
                            "ruleName": "RULE2",
                            "priority": 2,
                            "lineNumber": 222,
                            "message": "bad stuff: !@#$%^&*()_+<>"
                        }
                    ]
                }
            ]
        },
        {
            "path": "src/main/dao",
            "totalFiles": 2,
            "filesWithViolations": 2,
            "priority1": 0,
            "priority2": 1,
            "priority3": 1,
            "files": [
                {
                    "name": "MyDao.groovy",
                    "violations": [
                        {
                            "ruleName": "RULE3",
                            "priority": 3,
                            "lineNumber": 333,
                            "sourceLine": "throw new Exception(\"cdata=<![CDATA[whatever]]>\") // Some very long message 1234567890123456789012345678901234567890",
                            "message": "Other info"
                        }
                    ]
                },
                {
                    "name": "MyOtherDao.groovy",
                    "violations": [
                        {
                            "ruleName": "RULE2",
                            "priority": 2,
                            "lineNumber": 222,
                            "message": "bad stuff: !@#$%^&*()_+<>"
                        }
                    ]
                }
            ]
        },
        {
            "path": "src/test",
            "totalFiles": 3,
            "filesWithViolations": 0,
            "priority1": 0,
            "priority2": 0,
            "priority3": 0,
            "files": []
        }
    ],
    "rules": [
        {
            "name": "DuplicateImport",
            "description": "Custom: Duplicate imports"
        },
        {
            "name": "UnnecessaryBooleanInstantiation",
            "description": "Use Boolean.valueOf() for variable values or Boolean.TRUE and Boolean.FALSE for constant values instead of calling the Boolean() constructor directly or calling Boolean.valueOf(true) or Boolean.valueOf(false)."
        }
    ]
}