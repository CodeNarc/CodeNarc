        -------------------------------------------------------
          CodeNarc - Integration with Other Tools / Frameworks
        -------------------------------------------------------

CodeNarc - Integration with Other Tools / Frameworks
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* IDEs
~~~~~~~~~~~~~~~~~~~~~~~~~

  * {{{http://www.jetbrains.com/idea/}IntelliJ IDEA}} - See the {{{http://plugins.jetbrains.com/plugin/?idea&id=5925}IDEA CodeNarc Plugin}}.

  * {{{http://eclipse.org/}Eclipse}} - See the {{{http://codenarceclipse.sourceforge.net/}Eclipse CodeNarc Plugin}}.


* Application Frameworks
~~~~~~~~~~~~~~~~~~~~~~~~~

  * {{{http://grails.org/}Grails}} - See the {{{http://www.grails.org/plugin/codenarc/}Grails CodeNarc Plugin}} for Grails 2.x.
    Use the the {{{http://gradle.org/docs/current/userguide/codenarc_plugin.html}Gradle CodeNarc Plugin}} for Grails 3.x and later.
    Also see {{{http://guides.grails.org/grails-codenarc/guide/index.html}Static code analysis in a Grails app with CodeNarc}}.

  * {{{http://griffon.codehaus.org/}Griffon}} - See the {{{http://docs.codehaus.org/display/GRIFFON/Codenarc+Plugin/}Griffon CodeNarc Plugin}}


* Build and Code Quality Tools
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    * {{{http://www.gradle.org/}Gradle}} build system - See the {{{http://gradle.org/docs/current/userguide/codenarc_plugin.html}Gradle CodeNarc Plugin}}.

    * {{{http://maven.apache.org/}Maven}} - See the {{{https://github.com/gleclaire/codenarc-maven-plugin}Maven CodeNarc Plugin}}

    * {{{http://hudson-ci.org/}Hudson}} - The {{{http://wiki.hudson-ci.org/display/HUDSON/Violations}Hudson Violations Plugin}}
      includes reporting and trending of CodeNarc violations. Also see this
      {{{http://blogs.techworld.com/monitoring-the-pulse-of-it/2010/08/grails-hudson-part-1-codenarc/}blog post}}. COMING SOON.

    * {{{http://www.sonarsource.org/}Sonar}} - The {{{http://docs.codehaus.org/display/SONAR/Groovy+Plugin}Sonar Groovy Plugin}}
      uses CodeNarc for its static analysis of Groovy source code.


* Customizing ClassLoader for Loading Rule Scripts
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  <<Grails>> (and possibly other tools integrating with <<CodeNarc>>) can benefit from using the current thread context
  <<<ClassLoader>>> for loading rule script files, rather than the default base <<<ClassLoader>>>. Setting the
  <"codenarc.useCurrentThreadContextClassLoader"> system property to <"true"> uses the current thread context
  <<<ClassLoader>>> for loading rule script files. That enables <<Grails>> to load rule script files from within
  the <<Grails>> project, and allows those rule scripts to reference local classes. See
  {{{https://jira.grails.org/browse/GPCODENARC-32}GPCODENARC-32}}. The
  {{{http://www.grails.org/plugin/codenarc/}Grails CodeNarc Plugin}} automatically sets that system property.
