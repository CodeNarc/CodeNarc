        --------------------------------------------------
                      CodeNarc - Comments Rules
        --------------------------------------------------

Comments Rules  ("<rulesets/comments.xml>")
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  These rules are related to comments.


* {ClassJavadoc} Rule
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  <Since CodeNarc 0.15>

  Makes sure each class and interface definition is preceded by javadoc. Enum definitions are not checked, due to strange
  behavior in the Groovy AST. By default, only the main class in a file is checked for Javadoc. The main class is defined as
  the class that has the same name as the source file, for instance MyClass is the main class in MyClass.groovy but the class
  MyOtherClass defined in the same source file is not the main class. To check all the classes in the file set the rule
  property <<<applyToNonMainClasses>>> to true.

  NOTE: This is a file-based rule, rather than an AST-based rule, so the <applyToClassNames> and
  <doNotApplyToClassNames> rule configuration properties are not available. See
  {{{./codenarc-configuring-rules.html#Standard_Properties_for_Configuring_Rules}
    Standard Properties for Configuring Rules}}.


* {JavadocConsecutiveEmptyLines} Rule
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  <Since CodeNarc 1.3>

  Checks for javadoc comments with more than one consecutive empty line.

  Known limitation: Only the first occurrence of consecutive empty lines within a javadoc comment is found.

  Example of violations:

-------------------------------------------------------------------------------
    /**
     * Description
     *
     *                                                                          // violation
     * @param startIndex - the starting index
     * @return the full count
     * @throws RuntimeException
     *
     * NOTE: Only the first occurrence of consecutive empty lines
     *       within a javadoc comment is found, so the following
     *       lines are not flagged as violations!!!
     *
     *
     */
    int countThings(int startIndex) { }
-------------------------------------------------------------------------------


* {JavadocEmptyFirstLine} Rule
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  <Since CodeNarc 1.3>

  Check for javadoc comments with an empty top line.

  Example of violations:

-------------------------------------------------------------------------------
    /**
     *                                                      // violation
     * Sample class
     *
     * @author Some Developer
     */
    class MyClass {

        /**
         *                                                  // violation
         * Return the calculated count of some stuff,
         * starting with the specified startIndex.
         *
         * @param startIndex - the starting index
         * @return the full count
         * @throws RuntimeException
         */
        int countThings(int startIndex) {
        }
    }
-------------------------------------------------------------------------------


* {JavadocEmptyLastLine} Rule
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  <Since CodeNarc 1.3>

  Check for javadoc comments with an empty line at the bottom.

  Example of violations:

-------------------------------------------------------------------------------
    /**
     * Sample class
     *
     * @author Some Developer
     *                                                      // violation
     */
    class MyClass {

        /**
         * Return the calculated count of some stuff,
         * starting with the specified startIndex.
         *
         * @param startIndex - the starting index
         * @return the full count
         * @throws RuntimeException
         *                                                  // violation
         */
        int countThings(int startIndex) {
        }
    }
-------------------------------------------------------------------------------


* {JavadocEmptyParamTag} Rule
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  <Since CodeNarc 1.3>

  Checks for empty <@param> tags within javadoc

  Known limitation: Only the first occurrence of an empty @param within a javadoc comment is found.

*----------------+----------------------------------------------------------------------+------------------------+
| <<Property>>   | <<Description>>                                                      | <<Default Value>>      |
*----------------+----------------------------------------------------------------------+------------------------+
| allowMultiline | Set to <<<true>>> to allow the tag content (name, description, etc.) | <<<false>>>            |
|                | to start on the following line. If <false>, that content must start  |                        |
|                | on the same line as the tag.                                         |                        |
*----------------+----------------------------------------------------------------------+------------------------+

  Example of violations:

-------------------------------------------------------------------------------
    /**
     * Return the calculated count of some stuff.
     *
     * @param                                               // violation
     * @return the full count
     * @throws RuntimeException
     */
    int countThings(int startIndex) { }
-------------------------------------------------------------------------------


* {JavadocEmptyReturnTag} Rule
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  <Since CodeNarc 1.3>

  Checks for empty @return tags within javadoc.

  Known limitation: Only the first occurrence of an empty @return within a javadoc comment is found.

*----------------+----------------------------------------------------------------------+------------------------+
| <<Property>>   | <<Description>>                                                      | <<Default Value>>      |
*----------------+----------------------------------------------------------------------+------------------------+
| allowMultiline | Set to <<<true>>> to allow the tag content (name, description, etc.) | <<<false>>>            |
|                | to start on the following line. If <false>, that content must start  |                        |
|                | on the same line as the tag.                                         |                        |
*----------------+----------------------------------------------------------------------+------------------------+

  Example of violations:

-------------------------------------------------------------------------------
    /**
     * Return the calculated count of some stuff.
     *
     * @param startIndex - the starting index
     * @return                                  // violation
     * @throws RuntimeException
     */
    int countThings(int startIndex) { }
-------------------------------------------------------------------------------


* {JavadocEmptySeeTag} Rule
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  <Since CodeNarc 1.3>

  Checks for empty <@see> tags within javadoc.

  Known limitation: Only the first occurrence of an empty @see within a javadoc comment is found.

*----------------+----------------------------------------------------------------------+------------------------+
| <<Property>>   | <<Description>>                                                      | <<Default Value>>      |
*----------------+----------------------------------------------------------------------+------------------------+
| allowMultiline | Set to <<<true>>> to allow the tag content (name, description, etc.) | <<<false>>>            |
|                | to start on the following line. If <false>, that content must start  |                        |
|                | on the same line as the tag.                                         |                        |
*----------------+----------------------------------------------------------------------+------------------------+

  Example of violations:

-------------------------------------------------------------------------------
    /**
     * Sample class
     *
     * @see                                                         // violation
     */
    class MyClass {

        /**
         * Return the calculated count of some stuff,
         * starting with the specified startIndex.
         *
         * @param startIndex - the starting index
         * @return the full count
         * @throws RuntimeException
         *     @see                                                 // violation
         *
         * NOTE: Only the first occurrence of an empty @see tag
         *       within a javadoc comment is found, so the
         *       following line is not flagged as a violation!!!
         * @see
         */
        int countThings(int startIndex) { }

        /**
         *@see                                                      // violation
         */
        String name = 'joe'
    }
-------------------------------------------------------------------------------
