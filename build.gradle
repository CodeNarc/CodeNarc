plugins {
    id 'groovy'
    id 'maven-publish'
    id 'signing'
    id 'idea'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

shadowJar {
    manifest {
        attributes 'Main-Class': 'org.codenarc.CodeNarc'
    }
}

group = 'org.codenarc'
archivesBaseName = 'CodeNarc'
version = '2.1.0'

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

repositories {
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'https://repo.maven.apache.org/maven2' }
}

def groovyVersion = '2.5.14'
def slf4jVersion = '1.7.25'

dependencies {
    implementation "org.codehaus.groovy:groovy:$groovyVersion"
    implementation "org.codehaus.groovy:groovy-xml:$groovyVersion"
    implementation "org.codehaus.groovy:groovy-json:$groovyVersion"
    implementation "org.codehaus.groovy:groovy-ant:$groovyVersion"
    implementation "org.codehaus.groovy:groovy-templates:$groovyVersion"

    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    implementation('org.gmetrics:GMetrics:1.1') {
        transitive = false
    }

    // JUnit is only required if you are using the CodeNarc testing framework, e.g. AbstractRuleTestCase
    compileOnly 'junit:junit:4.12'

    testImplementation "org.slf4j:slf4j-simple:$slf4jVersion"
    testImplementation 'commons-cli:commons-cli:1.4'
    testImplementation 'junit:junit:4.12'
    testImplementation 'com.github.stefanbirkner:system-rules:1.16.1'

    testRuntime "org.codehaus.groovy:groovy-macro:$groovyVersion"
}

sourceSets {
    main {
        java { srcDirs = [] }
        groovy { srcDirs = ['src/main/groovy', 'src/main/java'] }
    }
}

test.maxParallelForks = 2
test.jvmArgs '-Duser.language=en -Duser.country=US'

java {
    //withJavadocJar()
    withSourcesJar()
}

javadoc {
    if (JavaVersion.current().java8Compatible) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

groovydoc {
    use = true
    groovyClasspath = configurations.compileClasspath // http://issues.gradle.org/browse/GRADLE-1391
}

task groovydocJar(type: Jar, dependsOn: groovydoc ) {
    classifier 'javadoc' // must use javadoc classifier to be able to deploy to Sonatype
    from groovydoc.destinationDir
}

signing {
    required { gradle.taskGraph.hasTask(publish) }
    sign publishing.publications
}

// Publish to Sonatype (OSSRH) Maven Repository
// See http://central.sonatype.org/pages/gradle.html
publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            artifact(groovydocJar) {
                classifier = 'javadoc'
            }

            pom {
                name = 'CodeNarc'
                description = 'The CodeNarc project provides a static analysis tool for Groovy code.'
                url = 'https://codenarc.org'

                scm {
                    connection = 'scm:git:git@github.com:CodeNarc/CodeNarc.git'
                    developerConnection = 'scm:git:git@github.com:CodeNarc/CodeNarc.git'
                    url = 'scm:git:git@github.com:CodeNarc/CodeNarc.git'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'chrismair'
                        name = 'Chris Mair'
                        email = 'chrismair@users.sourceforge.net'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            def releasesUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsUrl : releasesUrl
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}
